"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const class_transformer_1 = require("class-transformer");
const add_quotes_decorator_1 = require("../../decorators/add-quotes.decorator");
/*
 * @Link RFC-7616 (quoted string) https://tools.ietf.org/html/rfc7616#section-3.3
 */
class OutgoingTransformDigestDto {
}
__decorate([
    class_transformer_1.Expose(),
    add_quotes_decorator_1.AddQuotes()
], OutgoingTransformDigestDto.prototype, "realm", void 0);
__decorate([
    class_transformer_1.Expose(),
    add_quotes_decorator_1.AddQuotes()
], OutgoingTransformDigestDto.prototype, "nonce", void 0);
__decorate([
    class_transformer_1.Expose(),
    add_quotes_decorator_1.AddQuotes()
], OutgoingTransformDigestDto.prototype, "qop", void 0);
__decorate([
    class_transformer_1.Expose(),
    add_quotes_decorator_1.AddQuotes()
], OutgoingTransformDigestDto.prototype, "domain", void 0);
__decorate([
    class_transformer_1.Expose(),
    add_quotes_decorator_1.AddQuotes()
], OutgoingTransformDigestDto.prototype, "opaque", void 0);
__decorate([
    class_transformer_1.Expose()
], OutgoingTransformDigestDto.prototype, "stale", void 0);
__decorate([
    class_transformer_1.Expose()
], OutgoingTransformDigestDto.prototype, "algorithm", void 0);
exports.OutgoingTransformDigestDto = OutgoingTransformDigestDto;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0Z29pbmctdHJhbnNmb3JtLWRpZ2VzdC5kdG8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2R0by9zZXJ2ZXIvb3V0Z29pbmctdHJhbnNmb3JtLWRpZ2VzdC5kdG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSx5REFBMkM7QUFDM0MsZ0ZBQWtFO0FBR2xFOztHQUVHO0FBQ0gsTUFBYSwwQkFBMEI7Q0EyQnRDO0FBdkJDO0lBRkMsMEJBQU0sRUFBRTtJQUNSLGdDQUFTLEVBQUU7eURBQ0U7QUFJZDtJQUZDLDBCQUFNLEVBQUU7SUFDUixnQ0FBUyxFQUFFO3lEQUNFO0FBSWQ7SUFGQywwQkFBTSxFQUFFO0lBQ1IsZ0NBQVMsRUFBRTt1REFDQztBQUliO0lBRkMsMEJBQU0sRUFBRTtJQUNSLGdDQUFTLEVBQUU7MERBQ0k7QUFJaEI7SUFGQywwQkFBTSxFQUFFO0lBQ1IsZ0NBQVMsRUFBRTswREFDSTtBQUdoQjtJQURDLDBCQUFNLEVBQUU7eURBQ007QUFHZjtJQURDLDBCQUFNLEVBQUU7NkRBQ1U7QUExQnJCLGdFQTJCQyJ9