import { ClientDigest } from "./interfaces/server/digest.interface";
import { GeneratedResponse } from "./interfaces/server/generated-response.interface";
import { GenerateResponseOption } from "./interfaces/server/options.interface";
import { VerifyPayload } from "./interfaces/server/payload.interface";
export declare class ServerDigestAuth {
    static analyze(header: string, allowQop: ReadonlyArray<string> | false): ClientDigest;
    static analyze(header: string, allowQop: ReadonlyArray<string> | false, multipleAuthentication: true): ReadonlyArray<{
        readonly scheme: string;
        readonly raw: string;
    } | ClientDigest>;
    static verifyByPassword(digest: ClientDigest, password: string, payload: VerifyPayload): boolean;
    static verifyBySecret(digest: ClientDigest, secret: string, payload: VerifyPayload): boolean;
    static generateResponse(realm: string, option?: GenerateResponseOption): GeneratedResponse;
}
