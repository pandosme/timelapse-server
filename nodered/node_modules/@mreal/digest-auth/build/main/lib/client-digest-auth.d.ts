import { ServerDigest } from "./interfaces/client/digest.interface";
import { GeneratedProtectedResponse, GeneratedUnprotectedResponse } from "./interfaces/client/generated-response.interface";
import { PayloadProtectionAuth, PayloadProtectionAuthInt, PayloadUnprotected } from "./interfaces/client/payload.interface";
export declare class ClientDigestAuth {
    static analyze(header: string): ServerDigest;
    static analyze(header: string, multipleAuthentication: true): ReadonlyArray<{
        readonly scheme: string;
        readonly raw: string;
    } | ServerDigest>;
    static generateUnprotected(serverDigest: ServerDigest, username: string, password: string, payload: PayloadUnprotected): GeneratedUnprotectedResponse;
    static generateProtectionAuth(serverDigest: ServerDigest, username: string, password: string, payload: PayloadProtectionAuth): GeneratedProtectedResponse;
    static generateProtectionAuthInt(serverDigest: ServerDigest, username: string, password: string, payload: PayloadProtectionAuthInt): GeneratedProtectedResponse;
    protected static generateQOP(serverDigest: ServerDigest & {
        readonly qop: string;
    }, username: string, password: string, payload: PayloadProtectionAuthInt): GeneratedProtectedResponse;
}
